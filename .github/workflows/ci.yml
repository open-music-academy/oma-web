name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      NODE_ENV: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.1
      - name: Install node
        uses: actions/setup-node@v4.0.4
        with:
          node-version: "20.17.0"
          cache: "yarn"
      - name: Install node modules
        run: yarn install --non-interactive --check-files --frozen-lockfile --production=false
      - name: Lint
        run: ./node_modules/.bin/gulp lint
      - name: Build
        run: ./node_modules/.bin/gulp build
      - name: Get current time
        uses: josStorer/get-current-time@v2.1.2
        id: current-time
      - name: Create release number file
        run: |
          echo "${{ steps.current-time.outputs.year }}.${{ steps.current-time.outputs.month }}.${{ steps.current-time.outputs.day }}.$GITHUB_RUN_NUMBER" > ./dist/release.txt
      - name: Upload workspace
        uses: actions/upload-artifact@v4.4.1
        with:
          name: dist
          path: dist
  deploy:
    runs-on: ubuntu-22.04
    needs: [build]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix')
    env:
      DOCKER_IMAGE: openmusicacademy/oma-web
      OCTO_PROJECT_NAME: oma-web
      OCTO_ENVIRONMENT: Staging
      OCTO_SERVER: https://oma.octopus.app
      OCTO_SPACE: Default
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.1
      - name: Download workspace
        uses: actions/download-artifact@v4.1.8
      - name: Read release number file
        run: echo "RELEASE_NUMBER="$(cat ./dist/release.txt | tr -d '\n')"" >> $GITHUB_ENV
      - name: Create release notes for Octopus
        run: echo "RELEASE_NOTES=$(echo $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/commit/$GITHUB_SHA)" >> $GITHUB_ENV
      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v6.9.0
        with:
          push: true
          context: .
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.RELEASE_NUMBER }}
      - name: Install Octopus CLI
        uses: OctopusDeploy/install-octopus-cli-action@v3.1.1
        with:
          version: latest
      - name: Create a release in Octopus Deploy üêô
        uses: OctopusDeploy/create-release-action@v3.2.2
        with:
          api_key: ${{ secrets.OCTO_API_KEY }}
          project: ${{ env.OCTO_PROJECT_NAME }}
          server: ${{ env.OCTO_SERVER }}
          space: ${{ env.OCTO_SPACE }}
          release_notes: ${{ env.RELEASE_NOTES }}
          release_number: ${{ env.RELEASE_NUMBER }}
      - name: Deploy a release in Octopus Deploy üêô
        uses: OctopusDeploy/deploy-release-action@v3.2.1
        with:
          api_key: ${{ secrets.OCTO_API_KEY }}
          project: ${{ env.OCTO_PROJECT_NAME }}
          server: ${{ env.OCTO_SERVER }}
          space: ${{ env.OCTO_SPACE }}
          release_number: ${{ env.RELEASE_NUMBER }}
          environments: ${{ env.OCTO_ENVIRONMENT }}
